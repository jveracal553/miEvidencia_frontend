{"ast":null,"code":"\"use strict\";\n\nvar _require = require('rxjs/internal/Observable'),\n    Observable = _require.Observable;\n\nvar assign = require('object-assign');\n\nvar _require2 = require('../operators/map'),\n    map = _require2.map;\n\nvar _require3 = require('../operators/filter'),\n    filter = _require3.filter;\n\nvar _require4 = require('../operators/reduce'),\n    reduce = _require4.reduce;\n/*\n A minimal rxjs based observable that align as closely as possible with the current es-observable spec,\n without the static factory methods\n */\n\n\nfunction SanityObservableMinimal() {\n  Observable.apply(this, arguments); // eslint-disable-line prefer-rest-params\n}\n\nSanityObservableMinimal.prototype = Object.create(assign(Object.create(null), Observable.prototype));\nObject.defineProperty(SanityObservableMinimal.prototype, 'constructor', {\n  value: SanityObservableMinimal,\n  enumerable: false,\n  writable: true,\n  configurable: true\n});\n\nSanityObservableMinimal.prototype.lift = function lift(operator) {\n  var observable = new SanityObservableMinimal();\n  observable.source = this;\n  observable.operator = operator;\n  return observable;\n};\n\nfunction createDeprecatedMemberOp(name, op) {\n  var hasWarned = false;\n  return function deprecatedOperator() {\n    if (!hasWarned) {\n      hasWarned = true;\n      console.warn(new Error(\"Calling observable.\".concat(name, \"(...) is deprecated. Please use observable.pipe(\").concat(name, \"(...)) instead\")));\n    }\n\n    return this.pipe(op.apply(this, arguments));\n  };\n}\n\nSanityObservableMinimal.prototype.map = createDeprecatedMemberOp('map', map);\nSanityObservableMinimal.prototype.filter = createDeprecatedMemberOp('filter', filter);\nSanityObservableMinimal.prototype.reduce = createDeprecatedMemberOp('filter', reduce);\nmodule.exports = SanityObservableMinimal;","map":{"version":3,"names":["_require","require","Observable","assign","_require2","map","_require3","filter","_require4","reduce","SanityObservableMinimal","apply","arguments","prototype","Object","create","defineProperty","value","enumerable","writable","configurable","lift","operator","observable","source","createDeprecatedMemberOp","name","op","hasWarned","deprecatedOperator","console","warn","Error","concat","pipe","module","exports"],"sources":["/Users/shadowm/Documents/final_project/mi_evidencia/mievidencia_frontend/node_modules/@sanity/observable/lib/SanityObservableMinimal.js"],"sourcesContent":["\"use strict\";\n\nvar _require = require('rxjs/internal/Observable'),\n    Observable = _require.Observable;\n\nvar assign = require('object-assign');\n\nvar _require2 = require('../operators/map'),\n    map = _require2.map;\n\nvar _require3 = require('../operators/filter'),\n    filter = _require3.filter;\n\nvar _require4 = require('../operators/reduce'),\n    reduce = _require4.reduce;\n/*\n A minimal rxjs based observable that align as closely as possible with the current es-observable spec,\n without the static factory methods\n */\n\n\nfunction SanityObservableMinimal() {\n  Observable.apply(this, arguments); // eslint-disable-line prefer-rest-params\n}\n\nSanityObservableMinimal.prototype = Object.create(assign(Object.create(null), Observable.prototype));\nObject.defineProperty(SanityObservableMinimal.prototype, 'constructor', {\n  value: SanityObservableMinimal,\n  enumerable: false,\n  writable: true,\n  configurable: true\n});\n\nSanityObservableMinimal.prototype.lift = function lift(operator) {\n  var observable = new SanityObservableMinimal();\n  observable.source = this;\n  observable.operator = operator;\n  return observable;\n};\n\nfunction createDeprecatedMemberOp(name, op) {\n  var hasWarned = false;\n  return function deprecatedOperator() {\n    if (!hasWarned) {\n      hasWarned = true;\n      console.warn(new Error(\"Calling observable.\".concat(name, \"(...) is deprecated. Please use observable.pipe(\").concat(name, \"(...)) instead\")));\n    }\n\n    return this.pipe(op.apply(this, arguments));\n  };\n}\n\nSanityObservableMinimal.prototype.map = createDeprecatedMemberOp('map', map);\nSanityObservableMinimal.prototype.filter = createDeprecatedMemberOp('filter', filter);\nSanityObservableMinimal.prototype.reduce = createDeprecatedMemberOp('filter', reduce);\nmodule.exports = SanityObservableMinimal;"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAAtB;AAAA,IACIC,UAAU,GAAGF,QAAQ,CAACE,UAD1B;;AAGA,IAAIC,MAAM,GAAGF,OAAO,CAAC,eAAD,CAApB;;AAEA,IAAIG,SAAS,GAAGH,OAAO,CAAC,kBAAD,CAAvB;AAAA,IACII,GAAG,GAAGD,SAAS,CAACC,GADpB;;AAGA,IAAIC,SAAS,GAAGL,OAAO,CAAC,qBAAD,CAAvB;AAAA,IACIM,MAAM,GAAGD,SAAS,CAACC,MADvB;;AAGA,IAAIC,SAAS,GAAGP,OAAO,CAAC,qBAAD,CAAvB;AAAA,IACIQ,MAAM,GAAGD,SAAS,CAACC,MADvB;AAEA;AACA;AACA;AACA;;;AAGA,SAASC,uBAAT,GAAmC;EACjCR,UAAU,CAACS,KAAX,CAAiB,IAAjB,EAAuBC,SAAvB,EADiC,CACE;AACpC;;AAEDF,uBAAuB,CAACG,SAAxB,GAAoCC,MAAM,CAACC,MAAP,CAAcZ,MAAM,CAACW,MAAM,CAACC,MAAP,CAAc,IAAd,CAAD,EAAsBb,UAAU,CAACW,SAAjC,CAApB,CAApC;AACAC,MAAM,CAACE,cAAP,CAAsBN,uBAAuB,CAACG,SAA9C,EAAyD,aAAzD,EAAwE;EACtEI,KAAK,EAAEP,uBAD+D;EAEtEQ,UAAU,EAAE,KAF0D;EAGtEC,QAAQ,EAAE,IAH4D;EAItEC,YAAY,EAAE;AAJwD,CAAxE;;AAOAV,uBAAuB,CAACG,SAAxB,CAAkCQ,IAAlC,GAAyC,SAASA,IAAT,CAAcC,QAAd,EAAwB;EAC/D,IAAIC,UAAU,GAAG,IAAIb,uBAAJ,EAAjB;EACAa,UAAU,CAACC,MAAX,GAAoB,IAApB;EACAD,UAAU,CAACD,QAAX,GAAsBA,QAAtB;EACA,OAAOC,UAAP;AACD,CALD;;AAOA,SAASE,wBAAT,CAAkCC,IAAlC,EAAwCC,EAAxC,EAA4C;EAC1C,IAAIC,SAAS,GAAG,KAAhB;EACA,OAAO,SAASC,kBAAT,GAA8B;IACnC,IAAI,CAACD,SAAL,EAAgB;MACdA,SAAS,GAAG,IAAZ;MACAE,OAAO,CAACC,IAAR,CAAa,IAAIC,KAAJ,CAAU,sBAAsBC,MAAtB,CAA6BP,IAA7B,EAAmC,kDAAnC,EAAuFO,MAAvF,CAA8FP,IAA9F,EAAoG,gBAApG,CAAV,CAAb;IACD;;IAED,OAAO,KAAKQ,IAAL,CAAUP,EAAE,CAAChB,KAAH,CAAS,IAAT,EAAeC,SAAf,CAAV,CAAP;EACD,CAPD;AAQD;;AAEDF,uBAAuB,CAACG,SAAxB,CAAkCR,GAAlC,GAAwCoB,wBAAwB,CAAC,KAAD,EAAQpB,GAAR,CAAhE;AACAK,uBAAuB,CAACG,SAAxB,CAAkCN,MAAlC,GAA2CkB,wBAAwB,CAAC,QAAD,EAAWlB,MAAX,CAAnE;AACAG,uBAAuB,CAACG,SAAxB,CAAkCJ,MAAlC,GAA2CgB,wBAAwB,CAAC,QAAD,EAAWhB,MAAX,CAAnE;AACA0B,MAAM,CAACC,OAAP,GAAiB1B,uBAAjB"},"metadata":{},"sourceType":"script"}
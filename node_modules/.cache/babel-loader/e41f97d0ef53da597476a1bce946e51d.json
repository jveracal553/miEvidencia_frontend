{"ast":null,"code":"/*\n * EventSource polyfill\n * Originally published by sc AmvTek srl (https://github.com/amvtek/EventSource) - devel@amvtek.com\n * Forked by Espen Hovlandsdal to fix a few issues + publish latest version\n */\n;\n\n(function (root, factory) {\n  /* global define */\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    if (global.EventSource && !global._eventSourceImportPrefix) {\n      return;\n    }\n\n    var evsImportName = (root._eventSourceImportPrefix || '') + 'EventSource';\n    root[evsImportName] = factory();\n  }\n})(typeof self === 'undefined' ? this : self, function () {\n  var EventSource = function (url, options) {\n    if (!url || typeof url != 'string') {\n      throw new SyntaxError('Not enough arguments');\n    }\n\n    this.URL = url;\n    this.setOptions(options);\n    var evs = this;\n    setTimeout(function () {\n      evs.poll();\n    }, 0);\n  };\n\n  EventSource.prototype = {\n    CONNECTING: 0,\n    OPEN: 1,\n    CLOSED: 2,\n    defaultOptions: {\n      loggingEnabled: false,\n      loggingPrefix: 'eventsource',\n      interval: 500,\n      // milliseconds\n      bufferSizeLimit: 256 * 1024,\n      // bytes\n      silentTimeout: 300000,\n      // milliseconds\n      getArgs: {\n        evs_buffer_size_limit: 256 * 1024\n      },\n      xhrHeaders: {\n        Accept: 'text/event-stream',\n        'Cache-Control': 'no-cache',\n        'X-Requested-With': 'XMLHttpRequest'\n      }\n    },\n    setOptions: function (options) {\n      var defaults = this.defaultOptions;\n      var option; // set all default options...\n\n      for (option in defaults) {\n        if (defaults.hasOwnProperty(option)) {\n          this[option] = defaults[option];\n        }\n      } // override with what is in options\n\n\n      for (option in options) {\n        if (option in defaults && options.hasOwnProperty(option)) {\n          this[option] = options[option];\n        }\n      } // if getArgs option is enabled\n      // ensure evs_buffer_size_limit corresponds to bufferSizeLimit\n\n\n      if (this.getArgs && this.bufferSizeLimit) {\n        this.getArgs.evs_buffer_size_limit = this.bufferSizeLimit;\n      } // if console is not available, force loggingEnabled to false\n      // eslint-disable-next-line no-console\n\n\n      if (typeof console === 'undefined' || typeof console.log === 'undefined') {\n        this.loggingEnabled = false;\n      }\n    },\n    log: function (message) {\n      if (this.loggingEnabled) {\n        // eslint-disable-next-line no-console\n        console.log('[' + this.loggingPrefix + ']:' + message);\n      }\n    },\n    poll: function () {\n      try {\n        if (this.readyState == this.CLOSED) {\n          return;\n        }\n\n        this.cleanup();\n        this.readyState = this.CONNECTING;\n        this.cursor = 0;\n        this.cache = '';\n        this._xhr = new this.XHR(this);\n        this.resetNoActivityTimer();\n      } catch (err) {\n        // in an attempt to silence the errors\n        this.log('There were errors inside the pool try-catch');\n        this.dispatchEvent('error', {\n          type: 'error',\n          data: err.message\n        });\n      }\n    },\n    pollAgain: function (interval) {\n      // schedule poll to be called after interval milliseconds\n      var evs = this;\n      evs.readyState = evs.CONNECTING;\n      evs.dispatchEvent('error', {\n        type: 'error',\n        data: 'Reconnecting '\n      });\n      this._pollTimer = setTimeout(function () {\n        evs.poll();\n      }, interval || 0);\n    },\n    cleanup: function () {\n      this.log('evs cleaning up');\n\n      if (this._pollTimer) {\n        clearInterval(this._pollTimer);\n        this._pollTimer = null;\n      }\n\n      if (this._noActivityTimer) {\n        clearInterval(this._noActivityTimer);\n        this._noActivityTimer = null;\n      }\n\n      if (this._xhr) {\n        this._xhr.abort();\n\n        this._xhr = null;\n      }\n    },\n    resetNoActivityTimer: function () {\n      if (this.silentTimeout) {\n        if (this._noActivityTimer) {\n          clearInterval(this._noActivityTimer);\n        }\n\n        var evs = this;\n        this._noActivityTimer = setTimeout(function () {\n          evs.log('Timeout! silentTImeout:' + evs.silentTimeout);\n          evs.pollAgain();\n        }, this.silentTimeout);\n      }\n    },\n    close: function () {\n      this.readyState = this.CLOSED;\n      this.log('Closing connection. readyState: ' + this.readyState);\n      this.cleanup();\n    },\n    _onxhrdata: function () {\n      var request = this._xhr;\n\n      if (request.isReady() && !request.hasError()) {\n        // reset the timer, as we have activity\n        this.resetNoActivityTimer(); // move this EventSource to OPEN state...\n\n        if (this.readyState == this.CONNECTING) {\n          this.readyState = this.OPEN;\n          this.dispatchEvent('open', {\n            type: 'open'\n          });\n        }\n\n        var buffer = request.getBuffer();\n\n        if (buffer.length > this.bufferSizeLimit) {\n          this.log('buffer.length > this.bufferSizeLimit');\n          this.pollAgain();\n        }\n\n        if (this.cursor == 0 && buffer.length > 0) {\n          // skip byte order mark \\uFEFF character if it starts the stream\n          if (buffer.substring(0, 1) == '\\uFEFF') {\n            this.cursor = 1;\n          }\n        }\n\n        var lastMessageIndex = this.lastMessageIndex(buffer);\n\n        if (lastMessageIndex[0] >= this.cursor) {\n          var newcursor = lastMessageIndex[1];\n          var toparse = buffer.substring(this.cursor, newcursor);\n          this.parseStream(toparse);\n          this.cursor = newcursor;\n        } // if request is finished, reopen the connection\n\n\n        if (request.isDone()) {\n          this.log('request.isDone(). reopening the connection');\n          this.pollAgain(this.interval);\n        }\n      } else if (this.readyState !== this.CLOSED) {\n        this.log('this.readyState !== this.CLOSED');\n        this.pollAgain(this.interval); //MV: Unsure why an error was previously dispatched\n      }\n    },\n    parseStream: function (chunk) {\n      // normalize line separators (\\r\\n,\\r,\\n) to \\n\n      // remove white spaces that may precede \\n\n      chunk = this.cache + this.normalizeToLF(chunk);\n      var events = chunk.split('\\n\\n');\n      var i, j, eventType, datas, line, retry;\n\n      for (i = 0; i < events.length - 1; i++) {\n        eventType = 'message';\n        datas = [];\n        var parts = events[i].split('\\n');\n\n        for (j = 0; j < parts.length; j++) {\n          line = this.trimWhiteSpace(parts[j]);\n\n          if (line.indexOf('event') == 0) {\n            eventType = line.replace(/event:?\\s*/, '');\n          } else if (line.indexOf('retry') == 0) {\n            retry = parseInt(line.replace(/retry:?\\s*/, ''), 10);\n\n            if (!isNaN(retry)) {\n              this.interval = retry;\n            }\n          } else if (line.indexOf('data') == 0) {\n            datas.push(line.replace(/data:?\\s*/, ''));\n          } else if (line.indexOf('id:') == 0) {\n            this.lastEventId = line.replace(/id:?\\s*/, '');\n          } else if (line.indexOf('id') == 0) {\n            // this resets the id\n            this.lastEventId = null;\n          }\n        }\n\n        if (datas.length && this.readyState != this.CLOSED) {\n          // dispatch a new event\n          var event = new MessageEvent(eventType, datas.join('\\n'), typeof window !== 'undefined' && typeof window.location !== 'undefined' ? window.location.origin : null, this.lastEventId);\n          this.dispatchEvent(eventType, event);\n        }\n      }\n\n      this.cache = events[events.length - 1];\n    },\n    dispatchEvent: function (type, event) {\n      var handlers = this['_' + type + 'Handlers'];\n\n      if (handlers) {\n        for (var i = 0; i < handlers.length; i++) {\n          handlers[i].call(this, event);\n        }\n      }\n\n      if (this['on' + type]) {\n        this['on' + type].call(this, event);\n      }\n    },\n    addEventListener: function (type, handler) {\n      if (!this['_' + type + 'Handlers']) {\n        this['_' + type + 'Handlers'] = [];\n      }\n\n      this['_' + type + 'Handlers'].push(handler);\n    },\n    removeEventListener: function (type, handler) {\n      var handlers = this['_' + type + 'Handlers'];\n\n      if (!handlers) {\n        return;\n      }\n\n      for (var i = handlers.length - 1; i >= 0; --i) {\n        if (handlers[i] === handler) {\n          handlers.splice(i, 1);\n          break;\n        }\n      }\n    },\n    _pollTimer: null,\n    _noactivityTimer: null,\n    _xhr: null,\n    lastEventId: null,\n    cache: '',\n    cursor: 0,\n    onerror: null,\n    onmessage: null,\n    onopen: null,\n    readyState: 0,\n    // ===================================================================\n    // helpers functions\n    // those are attached to prototype to ease reuse and testing...\n    urlWithParams: function (baseURL, params) {\n      var encodedArgs = [];\n\n      if (params) {\n        var key, urlarg;\n        var urlize = encodeURIComponent;\n\n        for (key in params) {\n          if (params.hasOwnProperty(key)) {\n            urlarg = urlize(key) + '=' + urlize(params[key]);\n            encodedArgs.push(urlarg);\n          }\n        }\n      }\n\n      if (encodedArgs.length > 0) {\n        if (baseURL.indexOf('?') == -1) return baseURL + '?' + encodedArgs.join('&');\n        return baseURL + '&' + encodedArgs.join('&');\n      }\n\n      return baseURL;\n    },\n    lastMessageIndex: function (text) {\n      var ln2 = text.lastIndexOf('\\n\\n');\n      var lr2 = text.lastIndexOf('\\r\\r');\n      var lrln2 = text.lastIndexOf('\\r\\n\\r\\n');\n\n      if (lrln2 > Math.max(ln2, lr2)) {\n        return [lrln2, lrln2 + 4];\n      }\n\n      return [Math.max(ln2, lr2), Math.max(ln2, lr2) + 2];\n    },\n    trimWhiteSpace: function (str) {\n      // to remove whitespaces left and right of string\n      var reTrim = /^(\\s|\\u00A0)+|(\\s|\\u00A0)+$/g;\n      return str.replace(reTrim, '');\n    },\n    normalizeToLF: function (str) {\n      // replace \\r and \\r\\n with \\n\n      return str.replace(/\\r\\n|\\r/g, '\\n');\n    }\n  };\n\n  if (isOldIE()) {\n    EventSource.isPolyfill = 'IE_8-9'; // patch EventSource defaultOptions\n\n    var defaults = EventSource.prototype.defaultOptions;\n    defaults.xhrHeaders = null; // no headers will be sent\n\n    defaults.getArgs.evs_preamble = 2048 + 8; // EventSource will send request using Internet Explorer XDomainRequest\n\n    EventSource.prototype.XHR = function (evs) {\n      /* global XDomainRequest */\n      var request = new XDomainRequest();\n      this._request = request; // set handlers\n\n      request.onprogress = function () {\n        request._ready = true;\n\n        evs._onxhrdata();\n      };\n\n      request.onload = function () {\n        this._loaded = true;\n\n        evs._onxhrdata();\n      };\n\n      request.onerror = function () {\n        this._failed = true;\n        evs.readyState = evs.CLOSED;\n        evs.dispatchEvent('error', {\n          type: 'error',\n          data: 'XDomainRequest error'\n        });\n      };\n\n      request.ontimeout = function () {\n        this._failed = true;\n        evs.readyState = evs.CLOSED;\n        evs.dispatchEvent('error', {\n          type: 'error',\n          data: 'XDomainRequest timed out'\n        });\n      }; // XDomainRequest does not allow setting custom headers\n      // If EventSource has enabled the use of GET arguments\n      // we add parameters to URL so that server can adapt the stream...\n\n\n      var reqGetArgs = {};\n\n      if (evs.getArgs) {\n        // copy evs.getArgs in reqGetArgs\n        var defaultArgs = evs.getArgs;\n\n        for (var key in defaultArgs) {\n          if (defaultArgs.hasOwnProperty(key)) {\n            reqGetArgs[key] = defaultArgs[key];\n          }\n        }\n\n        if (evs.lastEventId) {\n          reqGetArgs.evs_last_event_id = evs.lastEventId;\n        }\n      } // send the request\n\n\n      request.open('GET', evs.urlWithParams(evs.URL, reqGetArgs));\n      request.send();\n    };\n\n    EventSource.prototype.XHR.prototype = {\n      useXDomainRequest: true,\n      _request: null,\n      _ready: false,\n      // true when progress events are dispatched\n      _loaded: false,\n      // true when request has been loaded\n      _failed: false,\n      // true if when request is in error\n      isReady: function () {\n        return this._request._ready;\n      },\n      isDone: function () {\n        return this._request._loaded;\n      },\n      hasError: function () {\n        return this._request._failed;\n      },\n      getBuffer: function () {\n        var rv = '';\n\n        try {\n          rv = this._request.responseText || '';\n        } catch (err) {// intentional noop\n        }\n\n        return rv;\n      },\n      abort: function () {\n        if (this._request) {\n          this._request.abort();\n        }\n      }\n    };\n  } else {\n    EventSource.isPolyfill = 'XHR'; // EventSource will send request using XMLHttpRequest\n\n    EventSource.prototype.XHR = function (evs) {\n      var request = new XMLHttpRequest();\n      this._request = request;\n      evs._xhr = this; // set handlers\n\n      request.onreadystatechange = function () {\n        if (request.readyState > 1 && evs.readyState != evs.CLOSED) {\n          if (request.status == 200 || request.status >= 300 && request.status < 400) {\n            evs._onxhrdata();\n          } else {\n            request._failed = true;\n            evs.readyState = evs.CLOSED;\n            evs.dispatchEvent('error', {\n              type: 'error',\n              data: 'The server responded with ' + request.status\n            });\n            evs.close();\n          }\n        }\n      };\n\n      request.onprogress = function () {// intentional noop\n      };\n\n      request.open('GET', evs.urlWithParams(evs.URL, evs.getArgs), true);\n      var headers = evs.xhrHeaders; // maybe null\n\n      for (var header in headers) {\n        if (headers.hasOwnProperty(header)) {\n          request.setRequestHeader(header, headers[header]);\n        }\n      }\n\n      if (evs.lastEventId) {\n        request.setRequestHeader('Last-Event-Id', evs.lastEventId);\n      }\n\n      request.send();\n    };\n\n    EventSource.prototype.XHR.prototype = {\n      useXDomainRequest: false,\n      _request: null,\n      _failed: false,\n      // true if we have had errors...\n      isReady: function () {\n        return this._request.readyState >= 2;\n      },\n      isDone: function () {\n        return this._request.readyState == 4;\n      },\n      hasError: function () {\n        return this._failed || this._request.status >= 400;\n      },\n      getBuffer: function () {\n        var rv = '';\n\n        try {\n          rv = this._request.responseText || '';\n        } catch (err) {// intentional noop\n        }\n\n        return rv;\n      },\n      abort: function () {\n        if (this._request) {\n          this._request.abort();\n        }\n      }\n    };\n  }\n\n  function MessageEvent(type, data, origin, lastEventId) {\n    this.bubbles = false;\n    this.cancelBubble = false;\n    this.cancelable = false;\n    this.data = data || null;\n    this.origin = origin || '';\n    this.lastEventId = lastEventId || '';\n    this.type = type || 'message';\n  }\n\n  function isOldIE() {\n    //return true if we are in IE8 or IE9\n    return Boolean(typeof window !== 'undefined' && window.XDomainRequest && window.XMLHttpRequest && new XMLHttpRequest().responseType === undefined);\n  }\n\n  return EventSource;\n});","map":{"version":3,"names":["root","factory","define","amd","module","exports","global","EventSource","_eventSourceImportPrefix","evsImportName","self","url","options","SyntaxError","URL","setOptions","evs","setTimeout","poll","prototype","CONNECTING","OPEN","CLOSED","defaultOptions","loggingEnabled","loggingPrefix","interval","bufferSizeLimit","silentTimeout","getArgs","evs_buffer_size_limit","xhrHeaders","Accept","defaults","option","hasOwnProperty","console","log","message","readyState","cleanup","cursor","cache","_xhr","XHR","resetNoActivityTimer","err","dispatchEvent","type","data","pollAgain","_pollTimer","clearInterval","_noActivityTimer","abort","close","_onxhrdata","request","isReady","hasError","buffer","getBuffer","length","substring","lastMessageIndex","newcursor","toparse","parseStream","isDone","chunk","normalizeToLF","events","split","i","j","eventType","datas","line","retry","parts","trimWhiteSpace","indexOf","replace","parseInt","isNaN","push","lastEventId","event","MessageEvent","join","window","location","origin","handlers","call","addEventListener","handler","removeEventListener","splice","_noactivityTimer","onerror","onmessage","onopen","urlWithParams","baseURL","params","encodedArgs","key","urlarg","urlize","encodeURIComponent","text","ln2","lastIndexOf","lr2","lrln2","Math","max","str","reTrim","isOldIE","isPolyfill","evs_preamble","XDomainRequest","_request","onprogress","_ready","onload","_loaded","_failed","ontimeout","reqGetArgs","defaultArgs","evs_last_event_id","open","send","useXDomainRequest","rv","responseText","XMLHttpRequest","onreadystatechange","status","headers","header","setRequestHeader","bubbles","cancelBubble","cancelable","Boolean","responseType","undefined"],"sources":["/Users/shadowm/Documents/final_project/mi_evidencia/mievidencia_frontend/node_modules/@rexxars/eventsource-polyfill/src/eventsource.js"],"sourcesContent":["/*\n * EventSource polyfill\n * Originally published by sc AmvTek srl (https://github.com/amvtek/EventSource) - devel@amvtek.com\n * Forked by Espen Hovlandsdal to fix a few issues + publish latest version\n */\n\n;(function (root, factory) {\n  /* global define */\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define([], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory()\n  } else {\n    // Browser globals (root is window)\n    if (global.EventSource && !global._eventSourceImportPrefix) {\n      return\n    }\n\n    var evsImportName = (root._eventSourceImportPrefix || '') + 'EventSource'\n    root[evsImportName] = factory()\n  }\n})(typeof self === 'undefined' ? this : self, function () {\n  var EventSource = function (url, options) {\n    if (!url || typeof url != 'string') {\n      throw new SyntaxError('Not enough arguments')\n    }\n\n    this.URL = url\n    this.setOptions(options)\n    var evs = this\n    setTimeout(function () {\n      evs.poll()\n    }, 0)\n  }\n\n  EventSource.prototype = {\n    CONNECTING: 0,\n\n    OPEN: 1,\n\n    CLOSED: 2,\n\n    defaultOptions: {\n      loggingEnabled: false,\n\n      loggingPrefix: 'eventsource',\n\n      interval: 500, // milliseconds\n\n      bufferSizeLimit: 256 * 1024, // bytes\n\n      silentTimeout: 300000, // milliseconds\n\n      getArgs: {\n        evs_buffer_size_limit: 256 * 1024,\n      },\n\n      xhrHeaders: {\n        Accept: 'text/event-stream',\n        'Cache-Control': 'no-cache',\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n    },\n\n    setOptions: function (options) {\n      var defaults = this.defaultOptions\n      var option\n\n      // set all default options...\n      for (option in defaults) {\n        if (defaults.hasOwnProperty(option)) {\n          this[option] = defaults[option]\n        }\n      }\n\n      // override with what is in options\n      for (option in options) {\n        if (option in defaults && options.hasOwnProperty(option)) {\n          this[option] = options[option]\n        }\n      }\n\n      // if getArgs option is enabled\n      // ensure evs_buffer_size_limit corresponds to bufferSizeLimit\n      if (this.getArgs && this.bufferSizeLimit) {\n        this.getArgs.evs_buffer_size_limit = this.bufferSizeLimit\n      }\n\n      // if console is not available, force loggingEnabled to false\n      // eslint-disable-next-line no-console\n      if (typeof console === 'undefined' || typeof console.log === 'undefined') {\n        this.loggingEnabled = false\n      }\n    },\n\n    log: function (message) {\n      if (this.loggingEnabled) {\n        // eslint-disable-next-line no-console\n        console.log('[' + this.loggingPrefix + ']:' + message)\n      }\n    },\n\n    poll: function () {\n      try {\n        if (this.readyState == this.CLOSED) {\n          return\n        }\n\n        this.cleanup()\n        this.readyState = this.CONNECTING\n        this.cursor = 0\n        this.cache = ''\n        this._xhr = new this.XHR(this)\n        this.resetNoActivityTimer()\n      } catch (err) {\n        // in an attempt to silence the errors\n        this.log('There were errors inside the pool try-catch')\n        this.dispatchEvent('error', {type: 'error', data: err.message})\n      }\n    },\n\n    pollAgain: function (interval) {\n      // schedule poll to be called after interval milliseconds\n      var evs = this\n      evs.readyState = evs.CONNECTING\n      evs.dispatchEvent('error', {\n        type: 'error',\n        data: 'Reconnecting ',\n      })\n      this._pollTimer = setTimeout(function () {\n        evs.poll()\n      }, interval || 0)\n    },\n\n    cleanup: function () {\n      this.log('evs cleaning up')\n\n      if (this._pollTimer) {\n        clearInterval(this._pollTimer)\n        this._pollTimer = null\n      }\n\n      if (this._noActivityTimer) {\n        clearInterval(this._noActivityTimer)\n        this._noActivityTimer = null\n      }\n\n      if (this._xhr) {\n        this._xhr.abort()\n        this._xhr = null\n      }\n    },\n\n    resetNoActivityTimer: function () {\n      if (this.silentTimeout) {\n        if (this._noActivityTimer) {\n          clearInterval(this._noActivityTimer)\n        }\n        var evs = this\n        this._noActivityTimer = setTimeout(function () {\n          evs.log('Timeout! silentTImeout:' + evs.silentTimeout)\n          evs.pollAgain()\n        }, this.silentTimeout)\n      }\n    },\n\n    close: function () {\n      this.readyState = this.CLOSED\n      this.log('Closing connection. readyState: ' + this.readyState)\n      this.cleanup()\n    },\n\n    _onxhrdata: function () {\n      var request = this._xhr\n\n      if (request.isReady() && !request.hasError()) {\n        // reset the timer, as we have activity\n        this.resetNoActivityTimer()\n\n        // move this EventSource to OPEN state...\n        if (this.readyState == this.CONNECTING) {\n          this.readyState = this.OPEN\n          this.dispatchEvent('open', {type: 'open'})\n        }\n\n        var buffer = request.getBuffer()\n\n        if (buffer.length > this.bufferSizeLimit) {\n          this.log('buffer.length > this.bufferSizeLimit')\n          this.pollAgain()\n        }\n\n        if (this.cursor == 0 && buffer.length > 0) {\n          // skip byte order mark \\uFEFF character if it starts the stream\n          if (buffer.substring(0, 1) == '\\uFEFF') {\n            this.cursor = 1\n          }\n        }\n\n        var lastMessageIndex = this.lastMessageIndex(buffer)\n        if (lastMessageIndex[0] >= this.cursor) {\n          var newcursor = lastMessageIndex[1]\n          var toparse = buffer.substring(this.cursor, newcursor)\n          this.parseStream(toparse)\n          this.cursor = newcursor\n        }\n\n        // if request is finished, reopen the connection\n        if (request.isDone()) {\n          this.log('request.isDone(). reopening the connection')\n          this.pollAgain(this.interval)\n        }\n      } else if (this.readyState !== this.CLOSED) {\n        this.log('this.readyState !== this.CLOSED')\n        this.pollAgain(this.interval)\n\n        //MV: Unsure why an error was previously dispatched\n      }\n    },\n\n    parseStream: function (chunk) {\n      // normalize line separators (\\r\\n,\\r,\\n) to \\n\n      // remove white spaces that may precede \\n\n      chunk = this.cache + this.normalizeToLF(chunk)\n\n      var events = chunk.split('\\n\\n')\n\n      var i, j, eventType, datas, line, retry\n\n      for (i = 0; i < events.length - 1; i++) {\n        eventType = 'message'\n        datas = []\n        var parts = events[i].split('\\n')\n\n        for (j = 0; j < parts.length; j++) {\n          line = this.trimWhiteSpace(parts[j])\n\n          if (line.indexOf('event') == 0) {\n            eventType = line.replace(/event:?\\s*/, '')\n          } else if (line.indexOf('retry') == 0) {\n            retry = parseInt(line.replace(/retry:?\\s*/, ''), 10)\n            if (!isNaN(retry)) {\n              this.interval = retry\n            }\n          } else if (line.indexOf('data') == 0) {\n            datas.push(line.replace(/data:?\\s*/, ''))\n          } else if (line.indexOf('id:') == 0) {\n            this.lastEventId = line.replace(/id:?\\s*/, '')\n          } else if (line.indexOf('id') == 0) {\n            // this resets the id\n\n            this.lastEventId = null\n          }\n        }\n\n        if (datas.length && this.readyState != this.CLOSED) {\n          // dispatch a new event\n          var event = new MessageEvent(\n            eventType,\n            datas.join('\\n'),\n            typeof window !== 'undefined' && typeof window.location !== 'undefined'\n              ? window.location.origin\n              : null,\n            this.lastEventId\n          )\n          this.dispatchEvent(eventType, event)\n        }\n      }\n\n      this.cache = events[events.length - 1]\n    },\n\n    dispatchEvent: function (type, event) {\n      var handlers = this['_' + type + 'Handlers']\n\n      if (handlers) {\n        for (var i = 0; i < handlers.length; i++) {\n          handlers[i].call(this, event)\n        }\n      }\n\n      if (this['on' + type]) {\n        this['on' + type].call(this, event)\n      }\n    },\n\n    addEventListener: function (type, handler) {\n      if (!this['_' + type + 'Handlers']) {\n        this['_' + type + 'Handlers'] = []\n      }\n\n      this['_' + type + 'Handlers'].push(handler)\n    },\n\n    removeEventListener: function (type, handler) {\n      var handlers = this['_' + type + 'Handlers']\n      if (!handlers) {\n        return\n      }\n      for (var i = handlers.length - 1; i >= 0; --i) {\n        if (handlers[i] === handler) {\n          handlers.splice(i, 1)\n          break\n        }\n      }\n    },\n\n    _pollTimer: null,\n\n    _noactivityTimer: null,\n\n    _xhr: null,\n\n    lastEventId: null,\n\n    cache: '',\n\n    cursor: 0,\n\n    onerror: null,\n\n    onmessage: null,\n\n    onopen: null,\n\n    readyState: 0,\n\n    // ===================================================================\n    // helpers functions\n    // those are attached to prototype to ease reuse and testing...\n\n    urlWithParams: function (baseURL, params) {\n      var encodedArgs = []\n\n      if (params) {\n        var key, urlarg\n        var urlize = encodeURIComponent\n\n        for (key in params) {\n          if (params.hasOwnProperty(key)) {\n            urlarg = urlize(key) + '=' + urlize(params[key])\n            encodedArgs.push(urlarg)\n          }\n        }\n      }\n\n      if (encodedArgs.length > 0) {\n        if (baseURL.indexOf('?') == -1) return baseURL + '?' + encodedArgs.join('&')\n        return baseURL + '&' + encodedArgs.join('&')\n      }\n      return baseURL\n    },\n\n    lastMessageIndex: function (text) {\n      var ln2 = text.lastIndexOf('\\n\\n')\n      var lr2 = text.lastIndexOf('\\r\\r')\n      var lrln2 = text.lastIndexOf('\\r\\n\\r\\n')\n\n      if (lrln2 > Math.max(ln2, lr2)) {\n        return [lrln2, lrln2 + 4]\n      }\n      return [Math.max(ln2, lr2), Math.max(ln2, lr2) + 2]\n    },\n\n    trimWhiteSpace: function (str) {\n      // to remove whitespaces left and right of string\n\n      var reTrim = /^(\\s|\\u00A0)+|(\\s|\\u00A0)+$/g\n      return str.replace(reTrim, '')\n    },\n\n    normalizeToLF: function (str) {\n      // replace \\r and \\r\\n with \\n\n      return str.replace(/\\r\\n|\\r/g, '\\n')\n    },\n  }\n\n  if (isOldIE()) {\n    EventSource.isPolyfill = 'IE_8-9'\n\n    // patch EventSource defaultOptions\n    var defaults = EventSource.prototype.defaultOptions\n    defaults.xhrHeaders = null // no headers will be sent\n    defaults.getArgs.evs_preamble = 2048 + 8\n\n    // EventSource will send request using Internet Explorer XDomainRequest\n    EventSource.prototype.XHR = function (evs) {\n      /* global XDomainRequest */\n      var request = new XDomainRequest()\n      this._request = request\n\n      // set handlers\n      request.onprogress = function () {\n        request._ready = true\n        evs._onxhrdata()\n      }\n\n      request.onload = function () {\n        this._loaded = true\n        evs._onxhrdata()\n      }\n\n      request.onerror = function () {\n        this._failed = true\n        evs.readyState = evs.CLOSED\n        evs.dispatchEvent('error', {\n          type: 'error',\n          data: 'XDomainRequest error',\n        })\n      }\n\n      request.ontimeout = function () {\n        this._failed = true\n        evs.readyState = evs.CLOSED\n        evs.dispatchEvent('error', {\n          type: 'error',\n          data: 'XDomainRequest timed out',\n        })\n      }\n\n      // XDomainRequest does not allow setting custom headers\n      // If EventSource has enabled the use of GET arguments\n      // we add parameters to URL so that server can adapt the stream...\n      var reqGetArgs = {}\n      if (evs.getArgs) {\n        // copy evs.getArgs in reqGetArgs\n        var defaultArgs = evs.getArgs\n        for (var key in defaultArgs) {\n          if (defaultArgs.hasOwnProperty(key)) {\n            reqGetArgs[key] = defaultArgs[key]\n          }\n        }\n        if (evs.lastEventId) {\n          reqGetArgs.evs_last_event_id = evs.lastEventId\n        }\n      }\n      // send the request\n\n      request.open('GET', evs.urlWithParams(evs.URL, reqGetArgs))\n      request.send()\n    }\n\n    EventSource.prototype.XHR.prototype = {\n      useXDomainRequest: true,\n\n      _request: null,\n\n      _ready: false, // true when progress events are dispatched\n\n      _loaded: false, // true when request has been loaded\n\n      _failed: false, // true if when request is in error\n\n      isReady: function () {\n        return this._request._ready\n      },\n\n      isDone: function () {\n        return this._request._loaded\n      },\n\n      hasError: function () {\n        return this._request._failed\n      },\n\n      getBuffer: function () {\n        var rv = ''\n        try {\n          rv = this._request.responseText || ''\n        } catch (err) {\n          // intentional noop\n        }\n        return rv\n      },\n\n      abort: function () {\n        if (this._request) {\n          this._request.abort()\n        }\n      },\n    }\n  } else {\n    EventSource.isPolyfill = 'XHR'\n\n    // EventSource will send request using XMLHttpRequest\n    EventSource.prototype.XHR = function (evs) {\n      var request = new XMLHttpRequest()\n      this._request = request\n      evs._xhr = this\n\n      // set handlers\n      request.onreadystatechange = function () {\n        if (request.readyState > 1 && evs.readyState != evs.CLOSED) {\n          if (request.status == 200 || (request.status >= 300 && request.status < 400)) {\n            evs._onxhrdata()\n          } else {\n            request._failed = true\n            evs.readyState = evs.CLOSED\n            evs.dispatchEvent('error', {\n              type: 'error',\n              data: 'The server responded with ' + request.status,\n            })\n            evs.close()\n          }\n        }\n      }\n\n      request.onprogress = function () {\n        // intentional noop\n      }\n\n      request.open('GET', evs.urlWithParams(evs.URL, evs.getArgs), true)\n\n      var headers = evs.xhrHeaders // maybe null\n      for (var header in headers) {\n        if (headers.hasOwnProperty(header)) {\n          request.setRequestHeader(header, headers[header])\n        }\n      }\n      if (evs.lastEventId) {\n        request.setRequestHeader('Last-Event-Id', evs.lastEventId)\n      }\n\n      request.send()\n    }\n\n    EventSource.prototype.XHR.prototype = {\n      useXDomainRequest: false,\n\n      _request: null,\n\n      _failed: false, // true if we have had errors...\n\n      isReady: function () {\n        return this._request.readyState >= 2\n      },\n\n      isDone: function () {\n        return this._request.readyState == 4\n      },\n\n      hasError: function () {\n        return this._failed || this._request.status >= 400\n      },\n\n      getBuffer: function () {\n        var rv = ''\n        try {\n          rv = this._request.responseText || ''\n        } catch (err) {\n          // intentional noop\n        }\n        return rv\n      },\n\n      abort: function () {\n        if (this._request) {\n          this._request.abort()\n        }\n      },\n    }\n  }\n\n  function MessageEvent(type, data, origin, lastEventId) {\n    this.bubbles = false\n    this.cancelBubble = false\n    this.cancelable = false\n    this.data = data || null\n    this.origin = origin || ''\n    this.lastEventId = lastEventId || ''\n    this.type = type || 'message'\n  }\n\n  function isOldIE() {\n    //return true if we are in IE8 or IE9\n    return Boolean(\n      typeof window !== 'undefined' &&\n        window.XDomainRequest &&\n        window.XMLHttpRequest &&\n        new XMLHttpRequest().responseType === undefined\n    )\n  }\n\n  return EventSource\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
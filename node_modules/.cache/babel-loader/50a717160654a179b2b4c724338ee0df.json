{"ast":null,"code":"'use strict';\n\nvar objectAssign = require('object-assign');\n\nmodule.exports = function (opts) {\n  return {\n    onResponse: function onResponse(response) {\n      var contentType = response.headers['content-type'] || '';\n      var shouldDecode = opts && opts.force || contentType.indexOf('application/json') !== -1;\n\n      if (!response.body || !contentType || !shouldDecode) {\n        return response;\n      }\n\n      return objectAssign({}, response, {\n        body: tryParse(response.body)\n      });\n    },\n    processOptions: function processOptions(options) {\n      return objectAssign({}, options, {\n        headers: objectAssign({\n          Accept: 'application/json'\n        }, options.headers)\n      });\n    }\n  };\n};\n\nfunction tryParse(body) {\n  try {\n    return JSON.parse(body);\n  } catch (err) {\n    err.message = 'Failed to parsed response body as JSON: ' + err.message;\n    throw err;\n  }\n}","map":{"version":3,"mappings":";;AAAA,IAAMA,eAAeC,QAAQ,eAARA,CAArB;;AAEAC,OAAOC,OAAPD,GAAiB;EAAA,OAAS;IACxBE,YAAY,8BAAY;MACtB,IAAMC,cAAcC,SAASC,OAATD,CAAiB,cAAjBA,KAAoC,EAAxD;MACA,IAAME,eAAgBC,QAAQA,KAAKC,KAAbD,IAAuBJ,YAAYM,OAAZN,CAAoB,kBAApBA,MAA4C,CAAC,CAA1F;;MACA,IAAI,CAACC,SAASM,IAAV,IAAkB,CAACP,WAAnB,IAAkC,CAACG,YAAvC,EAAqD;QACnD,OAAOF,QAAP;MACD;;MAED,OAAON,aAAa,EAAbA,EAAiBM,QAAjBN,EAA2B;QAACY,MAAMC,SAASP,SAASM,IAAlBC;MAAP,CAA3Bb,CAAP;IARsB;IAWxBc,gBAAgB;MAAA,OACdd,aAAa,EAAbA,EAAiBe,OAAjBf,EAA0B;QACxBO,SAASP,aAAa;UAACgB,QAAQ;QAAT,CAAbhB,EAA2Ce,QAAQR,OAAnDP;MADe,CAA1BA,CADc;IAAA;EAXQ,CAAT;AAAjB;;AAiBA,SAASa,QAAT,CAAkBD,IAAlB,EAAwB;EACtB,IAAI;IACF,OAAOK,KAAKC,KAALD,CAAWL,IAAXK,CAAP;EADF,EAEE,OAAOE,GAAP,EAAY;IACZA,IAAIC,OAAJD,gDAAyDA,IAAIC,OAA7DD;IACA,MAAMA,GAAN;EACD;AACF","names":["objectAssign","require","module","exports","onResponse","contentType","response","headers","shouldDecode","opts","force","indexOf","body","tryParse","processOptions","options","Accept","JSON","parse","err","message"],"sources":["../../src/middleware/jsonResponse.js"],"sourcesContent":["const objectAssign = require('object-assign')\n\nmodule.exports = opts => ({\n  onResponse: response => {\n    const contentType = response.headers['content-type'] || ''\n    const shouldDecode = (opts && opts.force) || contentType.indexOf('application/json') !== -1\n    if (!response.body || !contentType || !shouldDecode) {\n      return response\n    }\n\n    return objectAssign({}, response, {body: tryParse(response.body)})\n  },\n\n  processOptions: options =>\n    objectAssign({}, options, {\n      headers: objectAssign({Accept: 'application/json'}, options.headers)\n    })\n})\n\nfunction tryParse(body) {\n  try {\n    return JSON.parse(body)\n  } catch (err) {\n    err.message = `Failed to parsed response body as JSON: ${err.message}`\n    throw err\n  }\n}\n"]},"metadata":{},"sourceType":"script"}